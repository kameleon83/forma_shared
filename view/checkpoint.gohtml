{{ define "content" }}
<section>
    <div class="row">
        <div class="div_check_button">
            <button type="button" class="checkpoint_reset btn-red">Reset</button>
            <button type="button" data-url="random-user" class="random-user btn-blue">Random</button>
        </div>

        <div class="div_checkpoint">
            <ul class="checkpoint_user">
                {{ range $k, $v := .user }} {{ if not $v.Prof }}
                <li data-level="{{ $v.Checkpoint }}" class="level{{ $v.Checkpoint }} user" onclick="window.open('http://{{ $v.IP }}:7070', '_blank')" data-email="{{ $v.Mail }}">{{ $v.Firstname | title }}</li>
                {{ end }} {{ end }}
            </ul>
        </div>
    </div>
</section>
<div class="newNotif" hidden>0</div>

<script>
    $(function() {

        let old = $(".checkpoint_user").html();

        var oldListUserAndLevel = new Map();

        function readListNameAndLevel() {
            $(".checkpoint_user li").each(function() {
                let level = $(this).data("level");
                let name = $(this).text()
                oldListUserAndLevel.set(name, level)
            })
        }
        readListNameAndLevel();

        function readHtmlChange() {
            $(".checkpoint_user li").each(function() {
                let level = $(this).data("level");
                let name = $(this).text()
                if (level == 3 && oldListUserAndLevel.get(name) != level) {
                    oldListUserAndLevel.set(name, level)
                    notifyMe(name, level);
                }
                if (oldListUserAndLevel.get(name) != level) {
                    oldListUserAndLevel.set(name, level)
                }
            })
        }

        let one = setInterval(function() {
            $.post('/checkpoint', function(data) {
                let newdata = $(data).find(".checkpoint_user").html();
                if (old != newdata) {
                    // console.log(newdata);
                    $('.checkpoint_user').html(newdata)
                    readHtmlChange();
                    old = newdata
                }
            })
        }, 4000)

        one;


        $('.checkpoint_reset').on('click', function(e) {
            e.preventDefault();
            $.post("/checkpoint_reset")
        })

        $('.random-user').on('click', function(e) {
            e.preventDefault();
            let url = $(this).data("url")
            $(".checkpoint_user li").each(function() {
                if ($(this).data("level") == 666) {
                    $.post('/follow/' + $(this).data("email") + '/999')
                }
            })
            $.post(url)
        })


        function notifyMe(name, level) {
            if (!("Notification" in window)) {
                alert("This browser does not support desktop notification");
            } else if (Notification.permission === "granted") {
                var options = {
                    body: "Help Me, Please!!!! :-(",
                    icon: "/images/smiley_help.png",
                    dir: "ltr",
                    requireInteraction: true
                };
                if (level == 3) {
                    var notification = new Notification(name, options);
                    notification.onclick = function() {
                        notification.close();
                        window.open().close();
                        return window.focus();
                    };
                }
            } else if (Notification.permission !== 'denied') {
                Notification.requestPermission(function(permission) {
                    if (!('permission' in Notification)) {
                        Notification.permission = permission;
                    }

                    if (permission === "granted") {
                        var options = {
                            body: "Help Me, Please!!!! :-(",
                            icon: "/images/smiley_help.png",
                            dir: "ltr",
                            requireInteraction: true
                        };
                        if (level == 3) {
                            var notification = new Notification(name, options);
                            notification.onclick = function() {
                                notification.close();
                                window.open().close();
                                return window.focus();
                            };
                        }
                    }
                });
            }
        }

    })
</script>
{{ end }}